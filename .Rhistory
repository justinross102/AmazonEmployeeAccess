Save = if_else(Save == "", NA, Save),
R = as.numeric(R),
RA = as.numeric(RA),
Rank = as.numeric(Rank),
GB = as.numeric(GB),
D_or_N = if_else(D_or_N == "D", "Day", "Night"),
Attendance = as.numeric(gsub(",", "", Attendance))) %>%
select(-c(1, 3, 10, 20, 21, 22))
phillies_games %>%
ggplot(mapping = aes(x = Home, y = R)) +
geom_boxplot()
phillies_games %>%
ggplot(mapping = aes(x = D_or_N, y = R)) +
geom_boxplot()
website = "https://www.baseball-reference.com/teams/PHI/2023-schedule-scores.shtml"
phillies_wins <- get_html_table(website, 1)
# change col names
colnames(phillies_wins) <- c("Game", "Date", "boxscore", "Team", "Home", "Opp", "W_or_L", "R", "RA", "Inn", "W_L", "Rank",
"GB", "Win", "Loss", "Save", "Time", "D_N", "Attendance", "cLI", "Streak", "Orig_Scheduled")
phillies_games <- phillies_wins %>%
filter(Game != "Gm#", # get rid of monthly headers
boxscore != "preview") %>%# get rid of games that haven't been played yet
mutate(Home = if_else(Home == "@", "Away", "Home"),
Save = if_else(Save == "", NA, Save),
R = as.numeric(R),
RA = as.numeric(RA),
Rank = as.numeric(Rank),
GB = as.numeric(GB),
D_or_N = if_else(D_or_N == "D", "Day", "Night"),
Attendance = as.numeric(gsub(",", "", Attendance))) %>%
select(-c(1, 3, 10, 20, 21, 22))
phillies_games %>%
ggplot(mapping = aes(x = Home, y = R)) +
geom_boxplot()
phillies_games %>%
ggplot(mapping = aes(x = D_or_N, y = R)) +
geom_boxplot()
website = "https://www.baseball-reference.com/teams/PHI/2023-schedule-scores.shtml"
phillies_wins <- get_html_table(website, 1)
# change col names
colnames(phillies_wins) <- c("Game", "Date", "boxscore", "Team", "Home", "Opp", "W_or_L", "R", "RA", "Inn", "W_L", "Rank",
"GB", "Win", "Loss", "Save", "Time", "D_N", "Attendance", "cLI", "Streak", "Orig_Scheduled")
phillies_games <- phillies_wins %>%
filter(Game != "Gm#", # get rid of monthly headers
boxscore != "preview") %>%# get rid of games that haven't been played yet
mutate(Home = if_else(Home == "@", "Away", "Home"),
Save = if_else(Save == "", NA, Save),
R = as.numeric(R),
RA = as.numeric(RA),
Rank = as.numeric(Rank),
GB = as.numeric(GB),
D_N = if_else(D_N == "D", "Day", "Night"),
Attendance = as.numeric(gsub(",", "", Attendance))) %>%
select(-c(1, 3, 10, 20, 21, 22))
phillies_games %>%
ggplot(mapping = aes(x = Home, y = R)) +
geom_boxplot()
phillies_games %>%
ggplot(mapping = aes(x = D_N, y = R)) +
geom_boxplot()
phillies_games %>%
ggplot(mapping = aes(x = Home, y = R)) +
geom_boxplot()
library(tidyverse)
library(rvest)
library(vroom)
get_html_table <- function(url, index, header = T){
df <- url %>%
read_html() %>%
html_elements("table") %>%
html_table(header=header) %>%
.[[index]]
colnames(df) <- make.names(colnames(df))
df
}
website = "https://www.baseball-reference.com/teams/PHI/2023-schedule-scores.shtml"
phillies_wins <- get_html_table(website, 1)
# change col names
colnames(phillies_wins) <- c("Game", "Date", "boxscore", "Team", "Home", "Opp", "W_or_L", "R", "RA", "Inn", "W_L", "Rank",
"GB", "Win", "Loss", "Save", "Time", "D_N", "Attendance", "cLI", "Streak", "Orig_Scheduled")
phillies_games <- phillies_wins %>%
filter(Game != "Gm#", # get rid of monthly headers
boxscore != "preview") %>%# get rid of games that haven't been played yet
mutate(Home = if_else(Home == "@", "Away", "Home"),
Save = if_else(Save == "", NA, Save),
R = as.numeric(R),
RA = as.numeric(RA),
Rank = as.numeric(Rank),
GB = as.numeric(GB),
D_N = if_else(D_N == "D", "Day", "Night"),
Attendance = as.numeric(gsub(",", "", Attendance))) %>%
select(-c(1, 3, 10, 20, 21, 22))
phillies_games %>%
ggplot(mapping = aes(x = Home, y = R)) +
geom_boxplot()
phillies_games %>%
ggplot(mapping = aes(x = D_N, y = R)) +
geom_boxplot()
view(phillies_games)
phillies_games %>%
ggplot(mapping = aes(x = Date, y = Attendance)) +
geom_line()
phillies_games %>%
ggplot(mapping = aes(x = Date, y = Attendance)) +
geom_point()
phillies_games <- phillies_wins %>%
filter(Game != "Gm#", # get rid of monthly headers
boxscore != "preview") %>%# get rid of games that haven't been played yet
mutate(Home = if_else(Home == "@", "Away", "Home"),
Save = if_else(Save == "", NA, Save),
R = as.numeric(R),
RA = as.numeric(RA),
Rank = as.numeric(Rank),
GB = as.numeric(GB),
D_N = if_else(D_N == "D", "Day", "Night"),
Date = as.Date(Date, format = "%A, %b %d")
Attendance = as.numeric(gsub(",", "", Attendance))) %>%
phillies_games <- phillies_wins %>%
filter(Game != "Gm#", # get rid of monthly headers
boxscore != "preview") %>%# get rid of games that haven't been played yet
mutate(Home = if_else(Home == "@", "Away", "Home"),
Save = if_else(Save == "", NA, Save),
R = as.numeric(R),
RA = as.numeric(RA),
Rank = as.numeric(Rank),
GB = as.numeric(GB),
D_N = if_else(D_N == "D", "Day", "Night"),
Date = as.Date(Date, format = "%A, %b %d"),
Attendance = as.numeric(gsub(",", "", Attendance))) %>%
select(-c(1, 3, 10, 20, 21, 22))
phillies_games %>%
ggplot(mapping = aes(x = Home, y = R)) +
geom_boxplot()
phillies_games %>%
ggplot(mapping = aes(x = D_N, y = R)) +
geom_boxplot()
phillies_games %>%
ggplot(mapping = aes(x = Date, y = Attendance)) +
geom_point()
phillies_games %>%
ggplot(mapping = aes(x = Date, y = Attendance, color = D_N)) +
geom_point()
phillies_games %>%
ggplot(mapping = aes(x = Date, y = Attendance, color = Home)) +
geom_point()
phillies_games %>%
ggplot(mapping = aes(x = Date, y = Attendance, color = Home)) +
geom_point() +
theme(aspect.ratio = 1)
phillies_games %>%
ggplot(mapping = aes(x = Date, y = Attendance, color = Home)) +
geom_point()
phillies_games %>%
ggplot(mapping = aes(x = Date, y = Attendance)) +
geom_point()
colnames(phillies_games)
vroom_write(x=phillies_games, file="./phillies_games_2023.csv", delim=",")
cwd()
getwd()
library(tidyverse)
library(rvest)
library(vroom)
get_html_table <- function(url, index, header = T){
df <- url %>%
read_html() %>%
html_elements("table") %>%
html_table(header=header) %>%
.[[index]]
colnames(df) <- make.names(colnames(df))
df
}
website = "https://www.baseball-reference.com/teams/PHI/2023-schedule-scores.shtml"
phillies_wins <- get_html_table(website, 1)
# change col names
colnames(phillies_wins) <- c("Game", "Date", "boxscore", "Team", "Home", "Opp", "W_or_L", "R", "RA", "Inn", "W_L", "Rank",
"GB", "Win", "Loss", "Save", "Time", "D_N", "Attendance", "cLI", "Streak", "Orig_Scheduled")
phillies_games <- phillies_wins %>%
filter(Game != "Gm#", # get rid of monthly headers
boxscore != "preview") %>%# get rid of games that haven't been played yet
mutate(Home = if_else(Home == "@", "Away", "Home"),
Save = if_else(Save == "", NA, Save),
R = as.numeric(R),
RA = as.numeric(RA),
Rank = as.numeric(Rank),
GB = as.numeric(GB),
D_N = if_else(D_N == "D", "Day", "Night"),
Date = as.Date(Date, format = "%A, %b %d"),
Attendance = as.numeric(gsub(",", "", Attendance))) %>%
select(-c(1, 3, 10, 20, 21, 22))
colnames(phillies_games)
phillies_games %>%
ggplot(mapping = aes(x = Home, y = R)) +
geom_boxplot()
phillies_games %>%
ggplot(mapping = aes(x = D_N, y = R)) +
geom_boxplot()
phillies_games %>%
ggplot(mapping = aes(x = Date, y = Attendance)) +
geom_point()
phillies_games %>%
ggplot(mapping = aes(RA, R)) +
geom_point()
phillies_games %>%
ggplot(mapping = aes(RA, R, color = W_or_L)) +
geom_point()
phillies_games %>%
ggplot(mapping = aes(x = Home, y = R)) +
geom_boxplot()
phillies_games %>%
ggplot(mapping = aes(x = D_N, y = R)) +
geom_boxplot()
phillies_games %>%
ggplot(mapping = aes(x = Date, y = Attendance)) +
geom_point()
phillies_games %>%
ggplot(mapping = aes(x = Date, y = Attendance)) +
geom_line()
phillies_games %>%
ggplot(mapping = aes(x = Date, y = Attendance)) +
geom_histogram()
phillies_games %>%
ggplot(mapping = aes(x = Date, y = Attendance)) +
geom_point()
ggplot(data = phillies_games, mapping = aes(x = Date, y = Attendance)) +
geom_point()
ggplot(data = phillies_games, mapping = aes(x = Date, y = Attendance)) +
geom_point()
phillies_games %>%
ggplot(mapping = aes(x = Home, y = R)) +
geom_boxplot()
phillies_games %>%
ggplot(mapping = aes(x = D_N, y = R)) +
geom_boxplot()
ggplot(data = phillies_games, mapping = aes(x = Date, y = Attendance)) +
geom_point()
website = "https://www.baseball-reference.com/teams/PHI/2023-schedule-scores.shtml"
phillies_wins <- get_html_table(website, 1)
# change col names
colnames(phillies_wins) <- c("Game", "Date", "boxscore", "Team", "Home", "Opp", "W_or_L", "R", "RA", "Inn", "W_L", "Rank",
"GB", "Win", "Loss", "Save", "Time", "D_N", "Attendance", "cLI", "Streak", "Orig_Scheduled")
phillies_games <- phillies_wins %>%
filter(Game != "Gm#", # get rid of monthly headers
boxscore != "preview") %>%# get rid of games that haven't been played yet
mutate(Home = if_else(Home == "@", "Away", "Home"),
Save = if_else(Save == "", NA, Save),
R = as.numeric(R),
RA = as.numeric(RA),
Rank = as.numeric(Rank),
GB = as.numeric(GB),
D_N = if_else(D_N == "D", "Day", "Night"),
Date = as.Date(Date, format = "%A, %b %d"),
Attendance = as.numeric(gsub(",", "", Attendance))) %>%
select(-c(1, 3, 10, 20, 21, 22))
phillies_games %>%
ggplot(mapping = aes(x = Home, y = R)) +
geom_boxplot()
phillies_games %>%
ggplot(mapping = aes(x = D_N, y = R)) +
geom_boxplot()
ggplot(data = phillies_games, mapping = aes(x = Date, y = Attendance)) +
geom_point()
phillies_games <- phillies_wins %>%
filter(Game != "Gm#", # get rid of monthly headers
boxscore != "preview") %>%# get rid of games that haven't been played yet
mutate(Home = if_else(Home == "@", "Away", "Home"),
Save = if_else(Save == "", NA, Save),
R = as.numeric(R),
RA = as.numeric(RA),
Rank = as.numeric(Rank),
GB = as.numeric(GB),
D_N = if_else(D_N == "D", "Day", "Night"),
Date = as.Date(Date, format = "%A, %b %d"),
Attendance = as.numeric(gsub(",", "", Attendance))) %>%
filter(rm(NA == T)) %>%
select(-c(1, 3, 10, 20, 21, 22))
phillies_games <- phillies_wins %>%
filter(Game != "Gm#", # get rid of monthly headers
boxscore != "preview") %>%# get rid of games that haven't been played yet
mutate(Home = if_else(Home == "@", "Away", "Home"),
Save = if_else(Save == "", NA, Save),
R = as.numeric(R),
RA = as.numeric(RA),
Rank = as.numeric(Rank),
GB = as.numeric(GB),
D_N = if_else(D_N == "D", "Day", "Night"),
Date = as.Date(Date, format = "%A, %b %d"),
Attendance = as.numeric(gsub(",", "", Attendance))) %>%
na.omit() %>%
select(-c(1, 3, 10, 20, 21, 22))
colnames(phillies_games)
phillies_games %>%
ggplot(mapping = aes(x = Home, y = R)) +
geom_boxplot()
phillies_games %>%
ggplot(mapping = aes(x = D_N, y = R)) +
geom_boxplot()
ggplot(data = phillies_games, mapping = aes(x = Date, y = Attendance)) +
geom_point()
vroom_write(x=phillies_games, file="./phillies_games_2023.csv", delim=",")
ggsave("basic_plot.jpg", basic_scatter)
basic_scatter <- ggplot(data = phillies_games, mapping = aes(x = Date, y = Attendance)) +
geom_point()
ggsave("basic_plot.jpg", basic_scatter)
getwd()
ggplot(data = phillies_games, mapping = aes(x = Date, y = Attendance, color = Home)) +
geom_point()
ggplot(data = phillies_games, mapping = aes(x = Date, y = Attendance, fill = Home)) +
geom_point() +
labs(title = "Phillies Attendance Throughout the Season")
ggplot(data = phillies_games, mapping = aes(x = Date, y = Attendance, color = Home)) +
geom_point() +
labs(title = "Phillies Attendance Throughout the Season")
ggplot(data = phillies_games, mapping = aes(x = Date, y = Attendance, color = Home)) +
geom_point() +
labs(title = "Phillies Attendance Throughout the 2023 Season")
ggplot(data = phillies_games, mapping = aes(x = Date, y = Attendance, color = Home)) +
geom_point() +
labs(title = "Phillies Attendance Throughout the 2023 Season",
legend = "")
ggplot(data = phillies_games, mapping = aes(x = Date, y = Attendance, color = Home)) +
geom_point() +
labs(title = "Phillies Attendance Throughout the 2023 Season",
legend = "The")
ggplot(data = phillies_games, mapping = aes(x = Date, y = Attendance, color = Home)) +
geom_point() +
labs(title = "Phillies Attendance Throughout the 2023 Season",
fill = "Location")
ggplot(data = phillies_games, mapping = aes(x = Date, y = Attendance, color = Home)) +
geom_point() +
labs(title = "Phillies Attendance Throughout the 2023 Season",
color = "Location")
ggplot(data = phillies_games, mapping = aes(x = Date, y = Attendance, color = Home)) +
geom_point()
basic_colors <- ggplot(data = your_data, mapping = aes(x = x_axis_values, y = y_axis_values)) + # specify what you are graphing
graphing_function() # the function you use here determines what your graph will be
basic_colors <- ggplot(data = phillies_games, mapping = aes(x = Date, y = Attendance, color = Home)) +
geom_point()
ggsave("basic_colors.jpg", basic_colors)
names <- c("Brian", "Lucy", "Allison", "Autumn", "Justin", "Connor")
sample(names, 1, replace = T)
sample(names, 1, replace = T)
sample(names, 1, replace = T)
sample(names, 1, replace = F)
sample(names, 1, replace = F)
sample(names, 1, replace = F)
sample(names, 1, replace = F)
sample(names, 1, replace = F)
sample(names, 1, replace = F)
sample(names, 1, replace = F)
sample(names, 1, replace = F)
sample(names, 1, replace = F)
sample(names, 1, replace = F)
sample(names, 1, replace = F)
sample(names, 1, replace = F)
names <- c("Brian", "Lucy", "Allison", "Autumn", "Justin", "Connor")
names <- c("Brian", "Lucy", "Allison", "Autumn", "Justin", "Connor")
sample(names, 1, replace = F)
sample(names, 1, replace = F)
sample(names, 1, replace = F)
sample(names, 1, replace = F)
sample(names, 1, replace = F)
sample(names, 1, replace = F)
sample(names, 6, replace = F)
sample(names, 6, replace = F)
sample(names, 6, replace = F)
sample(names, 6, replace = F)
sample(names, 6, replace = F)
sample(names, 6, replace = F)
sample(names, 6, replace = F)
sample(names, 6, replace = F)
sample(names, 6, replace = F)
sample(names, 6, replace = T)
sample(names, 6, replace = T)
sample(names, 6, replace = T)
sample(names, 6, replace = T)
sample(names, 6, replace = T)
ggplot(df, aes(x = interaction(ROLE_ROLLUP_1, ROLE_ROLLUP_2), fill = factor(ACTION))) +
geom_bar(position = 'dodge', stat = 'count') +
labs(title = 'Bar Plot for ACTION Based on ROLE_ROLLUP_1 and ROLE_ROLLUP_2',
x = 'Role Combination',
y = 'Count') +
scale_fill_manual(values = c("0" = "red", "1" = "green"))
setwd("~/Documents/BYU/stat348/AmazonEmployeeAccess")
# load libraries ----------------------------------------------------------
library(tidyverse)
library(tidymodels)
library(vroom)
library(embed) # for target encoding
library(ggmosaic)
# load in data ------------------------------------------------------------
train <- vroom("./train.csv")
test <- vroom("./test.csv")
# distribution of Action
train %>%
ggplot(mapping = aes(x = factor(ACTION))) +
geom_bar() +
labs(title = "Distribution of ACTION",
x = "ACTION",
y = "Count")
ggplot(df, aes(x = interaction(ROLE_ROLLUP_1, ROLE_ROLLUP_2), fill = factor(ACTION))) +
geom_bar(position = 'dodge', stat = 'count') +
labs(title = 'Bar Plot for ACTION Based on ROLE_ROLLUP_1 and ROLE_ROLLUP_2',
x = 'Role Combination',
y = 'Count') +
scale_fill_manual(values = c("0" = "red", "1" = "green"))
ggplot(train, aes(x = interaction(ROLE_ROLLUP_1, ROLE_ROLLUP_2), fill = factor(ACTION))) +
geom_bar(position = 'dodge', stat = 'count') +
labs(title = 'Bar Plot for ACTION Based on ROLE_ROLLUP_1 and ROLE_ROLLUP_2',
x = 'Role Combination',
y = 'Count') +
scale_fill_manual(values = c("0" = "red", "1" = "green"))
ggplot(train, aes(x = factor(MGR_ID), fill = factor(ACTION))) +
geom_bar(position = 'dodge', stat = 'count') +
labs(title = 'Managerial Impact on Resource Approval',
x = 'Manager ID',
y = 'Count') +
scale_fill_manual(values = c("0" = "red", "1" = "green"))
ggplot(train, aes(x = factor(MGR_ID), fill = factor(ACTION))) +
geom_bar(position = 'dodge', stat = 'count') +
labs(title = 'Managerial Impact on Resource Approval',
x = 'Manager ID',
y = 'Count') +
scale_fill_manual(values = c("0" = "red", "1" = "green"))
# Subset the data to include only managers with the most occurrences of ACTION = 0
top_managers <- df %>%
filter(ACTION == 0) %>%
group_by(MGR_ID) %>%
tally() %>%
arrange(desc(n)) %>%
slice(1:10) %>%
pull(MGR_ID)
# Subset the data to include only managers with the most occurrences of ACTION = 0
top_managers <- df %>%
filter(ACTION == 0) %>%
group_by(MGR_ID) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
head(10) %>%
pull(MGR_ID)
# Subset the data to include only managers with the most occurrences of ACTION = 0
top_managers <- train %>%
filter(ACTION == 0) %>%
group_by(MGR_ID) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
head(10) %>%
pull(MGR_ID)
subset_df <- df %>%
filter(MGR_ID %in% top_managers)
subset_df <- train %>%
filter(MGR_ID %in% top_managers)
ggplot(subset_df, aes(x = factor(MGR_ID), fill = factor(ACTION))) +
geom_bar(position = 'dodge', stat = 'count') +
labs(title = 'Managerial Impact on Resource Approval',
x = 'Manager ID',
y = 'Count') +
scale_fill_manual(values = c("0" = "red", "1" = "green"))
# Subset the data to include only managers with the most occurrences of ACTION = 0
top_managers <- train %>%
filter(ACTION == 0) %>%
group_by(MGR_ID) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
head(20) %>%
pull(MGR_ID)
subset_df <- train %>%
filter(MGR_ID %in% top_managers)
ggplot(subset_df, aes(x = factor(MGR_ID), fill = factor(ACTION))) +
geom_bar(position = 'dodge', stat = 'count') +
labs(title = 'Managerial Impact on Resource Approval',
x = 'Manager ID',
y = 'Count') +
scale_fill_manual(values = c("0" = "red", "1" = "green"))
# Subset the data to include only managers with the most occurrences of ACTION = 0
top_managers <- train %>%
filter(ACTION == 0) %>%
group_by(MGR_ID) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
head(15) %>%
pull(MGR_ID)
subset_df <- train %>%
filter(MGR_ID %in% top_managers)
ggplot(subset_df, aes(x = factor(MGR_ID), fill = factor(ACTION))) +
geom_bar(position = 'dodge', stat = 'count') +
labs(title = 'Managerial Impact on Resource Approval',
x = 'Manager ID',
y = 'Count') +
scale_fill_manual(values = c("0" = "red", "1" = "green"))
# Subset the data to include only managers with the most occurrences of ACTION = 0
ACTION0_managers <- train %>%
filter(ACTION == 0) %>%
group_by(MGR_ID) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
head(15) %>%
pull(MGR_ID)
subset_train <- train %>%
filter(MGR_ID %in% ACTION0_managers)
ggplot(subset_df, aes(x = factor(MGR_ID), fill = factor(ACTION))) +
geom_bar(position = 'dodge', stat = 'count') +
labs(title = 'Managerial Impact on Resource Approval',
x = 'Manager ID',
y = 'Count') +
scale_fill_manual(values = c("0" = "red", "1" = "green"))
ggplot(subset_df, aes(x = factor(MGR_ID), fill = factor(ACTION))) +
geom_bar(position = 'dodge', stat = 'count') +
labs(title = 'Managerial Impact on Resource Approval',
x = 'Manager ID',
y = 'Count',
fill = 'Approval Result') +
scale_fill_manual(values = c("0" = "red", "1" = "green"))
